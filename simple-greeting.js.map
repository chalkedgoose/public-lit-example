{"version":3,"file":"simple-greeting.js","sourceRoot":"","sources":["src/simple-greeting.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAC,UAAU,EAAE,IAAI,EAAE,GAAG,EAAC,MAAM,KAAK,CAAC;AAC1C,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AAG1D,IAAa,cAAc,GAA3B,MAAa,cAAe,SAAQ,UAAU;IAA9C;;QAQE,SAAI,GAAY,OAAO,CAAC;IAK1B,CAAC;IAHU,MAAM;QACb,OAAO,IAAI,CAAA,aAAa,IAAI,CAAC,IAAI,OAAO,CAAC;IAC3C,CAAC;CACF,CAAA;AAZiB,qBAAM,GAAG,GAAG,CAAA;;;;GAI1B,CAAA;AAGF;IADC,QAAQ,EAAE;4CACa;AARb,cAAc;IAD1B,aAAa,CAAC,iBAAiB,CAAC;GACpB,cAAc,CAa1B;SAbY,cAAc","sourcesContent":["import {LitElement, html, css} from 'lit';\nimport {customElement, property} from 'lit/decorators.js';\n\n@customElement('simple-greeting')\nexport class SimpleGreeting extends LitElement {\n  static override styles = css`\n    :host {\n      color: blue;\n    }\n  `;\n\n  @property()\n  name?: string = 'World';\n\n  override render() {\n    return html`<p>Hello, ${this.name}!</p>`;\n  }\n}\n\ndeclare global {\n    interface HTMLElementTagNameMap {\n        'simple-greeting': SimpleGreeting;\n    }\n}\n"]}